    NotificationItem:
      type: object
      properties:
        id: { type: integer }
        type: { type: string }
        title: { type: string }
        body: { type: string }
        readAt: { type: string, format: date-time, nullable: true }
        createdAt: { type: string, format: date-time }
    NotificationSummary:
      type: object
      properties:
        total: { type: integer }
        unread: { type: integer }
    DeviceRegisterRequest:
      type: object
      required: [platform, token]
      properties:
        platform: { type: string, enum: [web, ios, android] }
        token: { type: string }
    Device:
      type: object
      properties:
        id: { type: integer }
        platform: { type: string }
        token: { type: string }
        createdAt: { type: string, format: date-time }
openapi: 3.0.3
info:
  title: TexaPay Mobile API
  version: 1.0.0
servers:
  - url: https://pay.texa.ng
    description: Ngrok tunnel
paths:
  /api/mobile/feature:
    get:
      summary: Feature flag status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
  /api/mobile/auth/login:
    post:
      summary: Session login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
  /api/mobile/auth/register:
    post:
      summary: Create a new user account (session login on success)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Created
          headers:
            Set-Cookie:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Validation error
  /api/mobile/auth/logout:
    post:
      summary: Logout and invalidate session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
  /api/mobile/banks:
    get:
      summary: List banks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  banks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bank'
  /api/mobile/banks/favorites:
    get:
      summary: List recent/favorite banks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  banks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bank'
  /api/mobile/banks/suggest:
    post:
      summary: Suggest likely bank by account number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestBankRequest'
      responses:
        '200':
          description: OK
  /api/mobile/health/pawapay:
    get:
      summary: Health probe for PawaPay integration
      responses:
        '200':
          description: OK
  /api/mobile/health/safehaven:
    get:
      summary: Health probe for SafeHaven integration
      responses:
        '200':
          description: OK
  /api/mobile/health/safehaven/banks:
    get:
      summary: List banks from SafeHaven for health check
      responses:
        '200':
          description: OK
  /api/mobile/health/oxr:
    get:
      summary: Health probe for OpenExchangeRates
      responses:
        '200':
          description: OK
  # Protected (Escrow)
  /api/mobile/protected/init:
    post:
      summary: Start a protected (escrow) transaction and issue a Virtual Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectedInitRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedInitResponse'
  /api/mobile/protected/{ref}:
    get:
      summary: Get protected transaction summary and timeline
      parameters:
        - in: path
          name: ref
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedSummaryResponse'
  /api/mobile/protected/{ref}/approve:
    post:
      summary: Approve release of escrowed funds (buyer only)
      parameters:
        - in: path
          name: ref
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  payout:
                    type: object
                    properties:
                      status: { type: string }
                      payoutRef: { type: string }
  /api/mobile/protected/{ref}/dispute:
    post:
      summary: Open a dispute to keep funds on hold (buyer only)
      parameters:
        - in: path
          name: ref
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason: { type: string }
                details: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  state: { type: string }
  /api/mobile/protected/{ref}/request-release:
    post:
      summary: Request buyer to approve release (nudge notification)
      parameters:
        - in: path
          name: ref
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
  /api/mobile/kyc/smileid/start:
    post:
      summary: Start Smile ID KYC session
      responses:
        '200':
          description: OK
  /api/mobile/kyc/smileid/web-token:
    post:
      summary: Get Smile ID web token (if library available)
      responses:
        '200':
          description: OK
  /api/mobile/kyc/status:
    get:
      summary: Get current user KYC status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  kyc_status:
                    type: string
                    enum: [unverified, pending, verified, failed]
                  kyc_level:
                    type: integer
                  kyc_verified_at:
                    type: string
                    format: date-time
  /api/mobile/transfers/name-enquiry:
    post:
      summary: Verify beneficiary account (name enquiry)
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Required idempotency key to safely retry this request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameEnquiryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NameEnquiryRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameEnquiryResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
  /api/mobile/notifications:
    get:
      summary: List notifications for the signed-in user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/NotificationItem' }
  /api/mobile/notifications/summary:
    get:
      summary: Notification summary counts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSummary'
  /api/mobile/notifications/read-all:
    put:
      summary: Mark all notifications as read
      requestBody:
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
  /api/mobile/devices/register:
    post:
      summary: Register a device for push notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegisterRequest'
      responses:
        '200':
          description: OK
  /api/mobile/devices:
    get:
      summary: List registered devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/Device' }
  /api/mobile/devices/test-push:
    post:
      summary: Send a test push notification
      requestBody:
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
  /api/mobile/devices/unregister:
    delete:
      summary: Unregister current device token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
        '400':
          description: Limits or validation error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LimitsError'
                  - type: object
                    properties:
                      message: { type: string }
  /api/mobile/transfers/quote:
    post:
      summary: Create a transfer quote
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Required idempotency key to safely retry this request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
  /api/mobile/transfers/confirm:
    post:
      summary: Confirm and initiate pay-in
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Required idempotency key to safely retry this request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
  /api/mobile/transfers/{transfer}/timeline:
    get:
      summary: Get transfer timeline
      parameters:
        - in: path
          name: transfer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
  /api/mobile/transfers/{transfer}/receipt-url:
    get:
      summary: Get signed receipt URL
      parameters:
        - in: path
          name: transfer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  url:
                    type: string
  /api/mobile/transfers/{transfer}/receipt.pdf:
    get:
      summary: Get signed receipt PDF URL
      parameters:
        - in: path
          name: transfer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  url: { type: string }
                  expires_at: { type: string, format: date-time }
  /api/mobile/transfers/{transfer}/share-url:
    post:
      summary: Create a signed share URL for receipt
      parameters:
        - in: path
          name: transfer
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  url: { type: string }
                  expires_at: { type: string, format: date-time }
  /api/mobile/transfers/{transfer}/payin/status:
    post:
      summary: Poll pay-in status
      parameters:
        - in: path
          name: transfer
          required: true
          schema: { type: integer }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  status: { type: string }
  /api/mobile/transfers/{transfer}/payout:
    post:
      summary: Initiate payout after successful pay-in
      parameters:
        - in: path
          name: transfer
          required: true
          schema: { type: integer }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  initiated: { type: boolean }
  /api/mobile/transfers/{transfer}/payout/status:
    post:
      summary: Poll payout status
      parameters:
        - in: path
          name: transfer
          required: true
          schema: { type: integer }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  status: { type: string }
  /api/mobile/dashboard:
    get:
      summary: Dashboard summary for the signed-in user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSummary'
  /api/mobile/transfers:
    get:
      summary: List transfers for the signed-in user
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: from
          schema: { type: string, format: date-time }
        - in: query
          name: to
          schema: { type: string, format: date-time }
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: perPage
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransfersIndex'
  /api/mobile/transfers/{transfer}:
    get:
      summary: Get a single transfer
      parameters:
        - in: path
          name: transfer
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferSummary'
  /api/mobile/pricing/limits:
    get:
      summary: Get effective limits and usage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsResponse'
  /api/mobile/pricing/rate-preview:
    get:
      summary: Price preview without persisting a quote
      parameters:
        - in: query
          name: amountXaf
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingPreview'
  /api/mobile/profile:
    get:
      summary: Get basic profile and KYC summary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
  /api/mobile/profile/security:
    get:
      summary: Get security status (PIN / 2FA)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityStatus'
  /api/mobile/profile/security/pin:
    post:
      summary: Set or change PIN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePinRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
  /api/mobile/profile/security/password:
    post:
      summary: Change password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicSuccess'
  /api/mobile/profile/notifications:
    get:
      summary: Get notification preferences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPrefs'
    put:
      summary: Update notification preferences
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Required idempotency key to safely retry this request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPrefs'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  preferences: { $ref: '#/components/schemas/NotificationPrefs' }
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
  /api/mobile/support/contact:
    post:
      summary: Create a support ticket
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Required idempotency key to safely retry this request
      responses:
        '200':
          description: OK
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
  /api/mobile/support/tickets/{ticket}/reply:
    post:
      summary: Reply to a support ticket
      parameters:
        - in: path
          name: ticket
          required: true
          schema: { type: integer }
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Required idempotency key to safely retry this request
      responses:
        '200':
          description: OK
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Feature disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
  /api/mobile/policies:
    get:
      summary: Get policy links and versions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesResponse'
  /api/mobile/support/help:
    get:
      summary: Help topics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpTopics'
  /api/mobile/support/contact:
    post:
      summary: Create a support ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupportContactRequest'
      responses:
        '200':
          description: OK
  /api/mobile/support/tickets:
    get:
      summary: List support tickets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/SupportTicketSummary' }
                  meta:
                    type: object
  /api/mobile/support/tickets/{ticket}:
    get:
      summary: Show a ticket and its messages
      parameters:
        - in: path
          name: ticket
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicketDetail'
  /api/mobile/support/tickets/{ticket}/reply:
    post:
      summary: Reply to a support ticket
      parameters:
        - in: path
          name: ticket
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportReplyRequest'
          application/x-www-form-urlencoded:
      responses:
        '200': { description: OK }
  components:
  schemas:
    ProtectedInitRequest:
      type: object
      required: [receiver, amountNgnMinor]
      properties:
        receiver:
          type: object
          required: [bankCode, accountNumber]
          properties:
            bankCode: { type: string }
            accountNumber: { type: string }
        amountNgnMinor: { type: integer }
        note: { type: string, nullable: true }
    ProtectedInitResponse:
      type: object
      properties:
        ref: { type: string }
        escrowState: { type: string, enum: [created, awaiting_approval, released, disputed] }
        funding:
          type: object
          properties:
            va:
              type: object
              properties:
                bankCode: { type: string }
                accountNumber: { type: string }
                reference: { type: string }
        autoReleaseAt: { type: string, format: date-time, nullable: true }
    ProtectedSummaryResponse:
      type: object
      properties:
        transaction:
          type: object
          properties:
            funding_ref: { type: string }
            escrow_state: { type: string }
            amount_ngn_minor: { type: integer }
            fee_ngn_minor: { type: integer, nullable: true }
            receiver_bank_code: { type: string }
            receiver_bank_name: { type: string, nullable: true }
            receiver_account_number: { type: string }
            receiver_account_name: { type: string, nullable: true }
            auto_release_at: { type: string, format: date-time, nullable: true }
            payout_status: { type: string, nullable: true }
        timeline:
          type: array
          items: { type: object }
    SuggestBankRequest:
      type: object
      properties:
        name:
        message: { type: string, example: Authentication required }
    Error403:
      type: object
      properties:
        success: { type: boolean, example: false }
        code: { type: string, example: FEATURE_DISABLED }
        message: { type: string, example: Mobile API is disabled }
    SecurityStatus:
      type: object
      properties:
        pinEnabled: { type: boolean }
        twoFactorEnabled: { type: boolean }
        lastSecurityUpdate: { type: string, format: date-time, nullable: true }
    UpdatePinRequest:
      type: object
      properties:
        currentPin: { type: string, nullable: true }
        newPin: { type: string }
    UpdatePasswordRequest:
      type: object
      required: [currentPassword, newPassword]
      properties:
        currentPassword: { type: string }
        newPassword: { type: string }
    NotificationPrefs:
      type: object
      properties:
        email:
          type: object
          additionalProperties: { type: boolean }
        sms:
          type: object
          additionalProperties: { type: boolean }
        push:
          type: object
          additionalProperties: { type: boolean }
    SupportContactRequest:
      type: object
      required: [subject, message]
      properties:
        subject: { type: string }
        message: { type: string }
    SupportTicketSummary:
      type: object
      properties:
        id: { type: integer }
        subject: { type: string }
        status: { type: string }
        priority: { type: string }
        createdAt: { type: string, format: date-time }
        lastReplyAt: { type: string, format: date-time, nullable: true }
    SupportMessage:
      type: object
      properties:
        from: { type: string, enum: [user, admin] }
        body: { type: string }
        at: { type: string, format: date-time }
    SupportTicketDetail:
      type: object
      properties:
        id: { type: integer }
        subject: { type: string }
        status: { type: string }
        priority: { type: string }
        createdAt: { type: string, format: date-time }
        messages:
          type: array
          items: { $ref: '#/components/schemas/SupportMessage' }
    DashboardSummary:
      type: object
      properties:
        kyc:
          type: object
          properties:
            status: { type: string }
            level: { type: integer }
        today:
          type: object
          properties:
            count: { type: integer }
            totalXaf: { type: integer }
        month:
          type: object
          properties:
            count: { type: integer }
            totalXaf: { type: integer }
        recentTransfers:
          type: array
          items:
            type: object
            properties:
              id: { type: integer }
              status: { type: string }
              amountXaf: { type: integer }
              createdAt: { type: string, format: date-time }
    TransferSummary:
      type: object
      properties:
        id: { type: integer }
        status: { type: string }
        amountXaf: { type: integer }
        totalPayXaf: { type: integer }
        receiveNgnMinor: { type: integer }
        bankCode: { type: string }
        bankName: { type: string, nullable: true }
        accountNumber: { type: string }
        accountName: { type: string, nullable: true }
        createdAt: { type: string, format: date-time }
    TransfersIndex:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TransferSummary'
        meta:
          type: object
          properties:
            page: { type: integer }
            perPage: { type: integer }
            total: { type: integer }
            lastPage: { type: integer }
    LimitsResponse:
      type: object
      properties:
        minXaf: { type: integer }
        maxXaf: { type: integer }
        dailyCap: { type: integer, nullable: true }
        monthlyCap: { type: integer, nullable: true }
        usedToday: { type: integer, nullable: true }
        usedMonth: { type: integer, nullable: true }
        remainingXafDay: { type: integer, nullable: true }
        remainingXafMonth: { type: integer, nullable: true }
    PricingPreview:
      type: object
      properties:
        amountXaf: { type: integer }
        feeTotalXaf: { type: integer }
        totalPayXaf: { type: integer }
        receiveNgnMinor: { type: integer }
        adjustedRate: { type: number }
    ProfileResponse:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        phone: { type: string }
        email: { type: string, nullable: true }
        kyc:
          type: object
          properties:
            status: { type: string }
            level: { type: integer }
            verifiedAt: { type: string, format: date-time, nullable: true }
    PoliciesResponse:
      type: object
      properties:
        terms:
          type: object
          properties:
            url: { type: string }
            version: { type: string }
        privacy:
          type: object
          properties:
            url: { type: string }
            version: { type: string }
        fees:
          type: object
          properties:
            url: { type: string }
            version: { type: string }
    HelpTopics:
      type: object
      properties:
        topics:
          type: array
          items:
            type: object
            properties:
              id: { type: string }
              title: { type: string }
              url: { type: string }
    BasicSuccess:
      type: object
      properties:
        success:
          type: boolean
    LoginRequest:
      type: object
      required: [phone, password]
      properties:
        phone:
          type: string
        password:
          type: string
        pin:
          type: string
          description: 4-6 digit PIN if enabled
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            phone:
              type: string
            kycStatus:
              type: string
            kycLevel:
              type: integer
    Bank:
      type: object
      properties:
        bankCode:
          type: string
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        categoryId:
          type: string
    NameEnquiryRequest:
      type: object
      required: [bankCode, accountNumber]
      properties:
        bankCode:
          type: string
        accountNumber:
          type: string
    NameEnquiryResponse:
      type: object
      properties:
        success:
          type: boolean
        accountName:
          type: string
        bankName:
          type: string
          nullable: true
        reference:
          type: string
    QuoteRequest:
      type: object
      required: [amountXaf, bankCode, accountNumber]
      properties:
        amountXaf:
          type: integer
        bankCode:
          type: string
        accountNumber:
          type: string
        accountName:
          type: string
          nullable: true
    QuoteResponse:
      type: object
      properties:
        success:
          type: boolean
        quote:
          type: object
          properties:
            id:
              type: integer
            ref:
              type: string
            amountXaf:
              type: integer
            feeTotalXaf:
              type: integer
            totalPayXaf:
              type: integer
            receiveNgnMinor:
              type: integer
            adjustedRate:
              type: number
              format: float
            expiresAt:
              type: string
              format: date-time
    ConfirmRequest:
      type: object
      required: [quoteId, bankCode, accountNumber, msisdn]
      properties:
        quoteId:
          type: integer
        bankCode:
          type: string
        accountNumber:
          type: string
        msisdn:
          type: string
          description: E.164 Cameroon MoMo without '+'
    ConfirmResponse:
      type: object
      properties:
        success:
          type: boolean
        transfer:
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
            payinRef:
              type: string
    RegisterRequest:
      type: object
      required: [name, phone, password, pin]
      properties:
        name: { type: string }
        phone: { type: string }
        password: { type: string }
        pin: { type: string, description: 4-6 digit PIN }
    LimitsError:
      type: object
      properties:
        success: { type: boolean, example: false }
        message: { type: string, example: Unable to verify transaction limits. Please try again. }
        limit_info:
          type: object
          properties:
            can_transact: { type: boolean }
            reason: { type: string }
            limit_type: { type: string }
        kyc_required: { type: boolean }
        kyc_url: { type: string, nullable: true }
