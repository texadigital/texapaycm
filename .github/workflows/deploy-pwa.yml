name: Deploy PWA to pay.texa.ng

on:
  push:
    branches: [ main, master ]
    paths:
      - 'pwa/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_APP_DIR: ${{ secrets.VPS_APP_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set release name
        run: echo "REL=pwa-$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Rsync PWA source to server release directory
        run: |
          rsync -az --delete \
            --exclude='.next' \
            --exclude='node_modules' \
            pwa/ "${VPS_USER}@${VPS_HOST}:${VPS_APP_DIR}/releases/${REL}/"

      - name: Remote build, switch symlink, and reload PM2/Nginx
        run: |
          ssh -o ServerAliveInterval=30 -o ServerAliveCountMax=10 "${VPS_USER}@${VPS_HOST}" bash -lc '
            set -euo pipefail
            APP_DIR='"${VPS_APP_DIR}"'
            REL_NAME='"${REL}"'
            REL="$APP_DIR/releases/$REL_NAME"
            echo "Using release: $REL"

            # Ensure shared env exists
            if [ ! -f "$APP_DIR/shared/.env.production" ]; then
              echo "Missing $APP_DIR/shared/.env.production"; exit 1; fi

            # Link env into release
            ln -sfn "$APP_DIR/shared/.env.production" "$REL/.env.production"

            # Ensure Node 18+/20+ and PM2 are available
            if ! command -v node >/dev/null 2>&1; then
              echo "Node.js is not installed. Please install Node 18+ and PM2, then re-run."; exit 1
            fi
            if ! command -v pm2 >/dev/null 2>&1; then
              npm install -g pm2 || { echo "Failed to install PM2"; exit 1; }
            fi

            export NODE_ENV=production
            export CI=true
            # Cap memory to avoid OOM on small VPS
            export NODE_OPTIONS="--max_old_space_size=512"

            cd "$REL"
            # Install deps (dev deps included for Next build)
            npm ci --no-audit --no-fund --prefer-offline || npm install --no-audit --no-fund
            # Build Next app
            NEXT_TELEMETRY_DISABLED=1 npm run build

            # Switch current symlink
            ln -sfn "$REL" "$APP_DIR/current"

            # PM2 app (port 3005)
            if pm2 describe texa-pwa >/dev/null 2>&1; then
              pm2 reload texa-pwa --update-env
            else
              NODE_ENV=production pm2 start npm --name texa-pwa -- run start -- -p 3005
            fi
            pm2 save || true

            # Reload Nginx
            nginx -t && systemctl reload nginx || true
            echo "Deploy complete: $REL_NAME"
          '
